import numpy as np

# maze_1 = [
#     [0, 0, 1, 0, 1, 0, 1, 1, 1, 1],
#     [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
#     [0, 0, 0, 0, 1, 1, 0, 0, 0, 1],
#     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#     [1, 0, 1, 1, 1, 0, 0, 0, 1, 1],
#     [0, 0, 0, 0, 0, 0, 0, 1, 0, 1],
#     [1, 1, 1, 1, 0, 0, 1, 0, 0, 0],
#     [0, 0, 0, 0, 1, 0, 0, 1, 0, 0],
#     [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
#     [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
# ]

# maze_2 = [
#     [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
#     [0, 1, 0, 0, 0, 1, 0, 1, 1, 1],
#     [0, 1, 0, 1, 1, 1, 0, 0, 0, 0],
#     [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
#     [0, 1, 0, 1, 1, 1, 1, 0, 1, 0],
#     [0, 0, 0, 0, 0, 0, 1, 0, 1, 0],
#     [1, 1, 1, 1, 0, 0, 1, 0, 1, 0],
#     [0, 0, 0, 1, 1, 1, 1, 0, 1, 0],
#     [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
#     [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
# ]

maze_3 = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 1, 1, 1],
    [0, 1, 0, 1, 1, 1, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 1, 1, 1, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 1, 0],
    [1, 1, 0, 1, 0, 0, 1, 0, 1, 0],
    [0, 0, 0, 1, 0, 0, 1, 0, 1, 0],
    [0, 1, 1, 0, 0, 0, 1, 1, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]

# def generate_random_maze(rows, cols, density=0.3):
#     maze = np.zeros((rows, cols), dtype=int)
#     for row in range(1, rows - 1):
#         for col in range(1, cols - 1):
#             if np.random.rand() < density:
#                 maze[row, col] = 1
#     return maze

# # Generate a random 40x40 maze with a density of walls set to 0.3
# random_maze_40x40 = generate_random_maze(40, 40, density=0.3)

# # Print or use the maze as needed
# print(random_maze_40x40)

example_mazes = [maze_3]
# example_mazes = [generate_random_maze(40, 40)]